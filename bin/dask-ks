#!/bin/bash
# Simple script to clean-up and start dask environment
#
##############################################################################

# Get number of cores available on system and set default Dask allocation of half that
platform=`uname`
procs_avail=1
mem_avail=1 # Total system memory available which will be figured out below
memory_limit=.25 # follows dask option memory-limit which is percentage of system memory

if [[ "$platform" == 'Linux' ]]; then
    procs_avail=`grep -c ^processor /proc/cpuinfo`
    mem_avail=`free -g | grep Mem | awk '{ print $2}'`
    user=$USER
elif [[ "$platform" == 'Darwin' ]]; then
    procs_avail=`sysctl -n hw.ncpu`
    mem_avail=`system_profiler SPHardwareDataType | grep "  Memory:" | awk '{ print $2}'`
    user=`id -u`

fi

kflag=false
nprocs=$((procs_avail / 2))
mem_alloc=$(echo ${mem_avail}*${memory_limit}|bc) # how much memory will be allocated to Dask. 
                                                  # For info purposes
usage() { echo "Usage: $0 [-p <nprocs>] [-m <memory-limit>] 
	        [-k (just clean-up environment and processes without starting.)]" 1>&2;\
	  exit 1; }

while getopts ":kp:m:h" opt; do
    case "$opt" in
      k) kflag=true
	 ;; 
      h) usage
	 exit 0
	 ;;
      m) memory_limit=${OPTARG} 
	 ;;
      p) nprocs=${OPTARG}
	 ;;
      \?) 
	 echo "Invalid option: -$OPTARG" >&2 
	 usage
	 exit 1
	 ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

# Clean-up
# rm -rf /home/kyp/worker-*
pkill -u $user -f dask-scheduler
pkill -u $user -f dask-worker

if [[ "$kflag" = true ]]; then
    echo "Cleaning up and exitting... "
    exit 0
fi

echo "Initiating Dask environment with these options: procs: ${nprocs}, memory: ${mem_alloc} GB"
sleep 5

dask-scheduler &
dask-worker --nprocs ${nprocs} --memory-limit ${memory_limit} tcp://localhost:8786 &
